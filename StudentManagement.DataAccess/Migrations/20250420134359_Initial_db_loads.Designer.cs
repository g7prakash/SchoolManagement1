// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagement.DataAccess.Contexts;

#nullable disable

namespace StudentManagement.DataAccess.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20250420134359_Initial_db_loads")]
    partial class Initial_db_loads
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StudentManagement.Models.Departments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("StudentManagement.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("StudentManagement.Models.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("PeriodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Period");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            PeriodName = "1st",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            PeriodName = "2nd",
                            StartTime = new TimeSpan(0, 8, 45, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            EndTime = new TimeSpan(0, 10, 15, 0, 0),
                            PeriodName = "3rd",
                            StartTime = new TimeSpan(0, 9, 30, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            EndTime = new TimeSpan(0, 11, 0, 0, 0),
                            PeriodName = "4th",
                            StartTime = new TimeSpan(0, 10, 15, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            PeriodName = "5th",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            PeriodName = "6th",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            PeriodName = "7th",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            EndTime = new TimeSpan(0, 8, 45, 0, 0),
                            PeriodName = "8th",
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReasonRevoked")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplacedByToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("RevokedByIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("StudentManagement.Models.SchoolClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SchoolClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "I",
                            Section = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "I",
                            Section = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "I",
                            Section = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "I",
                            Section = "D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "I",
                            Section = "E"
                        },
                        new
                        {
                            Id = 6,
                            Name = "I",
                            Section = "F"
                        },
                        new
                        {
                            Id = 7,
                            Name = "II",
                            Section = "A"
                        },
                        new
                        {
                            Id = 8,
                            Name = "II",
                            Section = "B"
                        },
                        new
                        {
                            Id = 9,
                            Name = "II",
                            Section = "C"
                        },
                        new
                        {
                            Id = 10,
                            Name = "II",
                            Section = "D"
                        },
                        new
                        {
                            Id = 11,
                            Name = "II",
                            Section = "E"
                        },
                        new
                        {
                            Id = 12,
                            Name = "II",
                            Section = "F"
                        },
                        new
                        {
                            Id = 13,
                            Name = "III",
                            Section = "A"
                        },
                        new
                        {
                            Id = 14,
                            Name = "III",
                            Section = "B"
                        },
                        new
                        {
                            Id = 15,
                            Name = "III",
                            Section = "C"
                        },
                        new
                        {
                            Id = 16,
                            Name = "III",
                            Section = "D"
                        },
                        new
                        {
                            Id = 17,
                            Name = "III",
                            Section = "E"
                        },
                        new
                        {
                            Id = 18,
                            Name = "III",
                            Section = "F"
                        },
                        new
                        {
                            Id = 19,
                            Name = "IV",
                            Section = "A"
                        },
                        new
                        {
                            Id = 20,
                            Name = "IV",
                            Section = "B"
                        },
                        new
                        {
                            Id = 21,
                            Name = "IV",
                            Section = "C"
                        },
                        new
                        {
                            Id = 22,
                            Name = "IV",
                            Section = "D"
                        },
                        new
                        {
                            Id = 23,
                            Name = "IV",
                            Section = "E"
                        },
                        new
                        {
                            Id = 24,
                            Name = "IV",
                            Section = "F"
                        },
                        new
                        {
                            Id = 25,
                            Name = "V",
                            Section = "A"
                        },
                        new
                        {
                            Id = 26,
                            Name = "V",
                            Section = "B"
                        },
                        new
                        {
                            Id = 27,
                            Name = "V",
                            Section = "C"
                        },
                        new
                        {
                            Id = 28,
                            Name = "V",
                            Section = "D"
                        },
                        new
                        {
                            Id = 29,
                            Name = "V",
                            Section = "E"
                        },
                        new
                        {
                            Id = 30,
                            Name = "V",
                            Section = "F"
                        },
                        new
                        {
                            Id = 31,
                            Name = "VI",
                            Section = "A"
                        },
                        new
                        {
                            Id = 32,
                            Name = "VI",
                            Section = "B"
                        },
                        new
                        {
                            Id = 33,
                            Name = "VI",
                            Section = "C"
                        },
                        new
                        {
                            Id = 34,
                            Name = "VI",
                            Section = "D"
                        },
                        new
                        {
                            Id = 35,
                            Name = "VI",
                            Section = "E"
                        },
                        new
                        {
                            Id = 36,
                            Name = "VI",
                            Section = "F"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subject");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English",
                            ShortName = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hindi",
                            ShortName = "Hindi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sanskrit",
                            ShortName = "Sanskrit"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mathematics",
                            ShortName = "English"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Social Science",
                            ShortName = "S. Sc."
                        },
                        new
                        {
                            Id = 6,
                            Name = "Science",
                            ShortName = "EVS"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Computer",
                            ShortName = "Computer"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Music",
                            ShortName = "Music"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Library",
                            ShortName = "Library"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Game",
                            ShortName = "Game"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Drawing",
                            ShortName = "Drawing"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Activity",
                            ShortName = "Activity"
                        },
                        new
                        {
                            Id = 13,
                            Name = "General Knowledge",
                            ShortName = "G. K."
                        },
                        new
                        {
                            Id = 14,
                            Name = "Moral Education",
                            ShortName = "M. Ed."
                        },
                        new
                        {
                            Id = 15,
                            Name = "Physical Education",
                            ShortName = "P. Ed."
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teacher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MR. ANUPAM ANURAG",
                            Qualified = "NA",
                            Subjects = "HINDI+ M.ED"
                        },
                        new
                        {
                            Id = 2,
                            Name = "MR.Dummy ENGLISH Teacher6",
                            Qualified = "NA",
                            Subjects = "ENGLISH + SPOKEN ENG"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MS.GAYATRI KUMARI",
                            Qualified = "NA",
                            Subjects = "MATHEMATICS"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MR.MANOJ KUMAR",
                            Qualified = "NA",
                            Subjects = "EVS + ACTIVITY"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MR.ABHISHEK KR.SINGH",
                            Qualified = "NA",
                            Subjects = "S.SC. + ACT+ G.K"
                        },
                        new
                        {
                            Id = 6,
                            Name = "MRS.PALLAVI KUMARI",
                            Qualified = "NA",
                            Subjects = "GAME"
                        },
                        new
                        {
                            Id = 7,
                            Name = "MR.RAUSHAN KUMAR",
                            Qualified = "NA",
                            Subjects = "LIBRARY"
                        },
                        new
                        {
                            Id = 8,
                            Name = "MRS.RICHA KUMARI",
                            Qualified = "NA",
                            Subjects = "MUSIC"
                        },
                        new
                        {
                            Id = 9,
                            Name = "MRS.NIDHI",
                            Qualified = "NA",
                            Subjects = "COMPUTER"
                        },
                        new
                        {
                            Id = 10,
                            Name = "MR.ARUN KUMAR",
                            Qualified = "NA",
                            Subjects = "DRAWING"
                        },
                        new
                        {
                            Id = 11,
                            Name = "MR.MAHENDRA KUMAR",
                            Qualified = "NA",
                            Subjects = "HINDI + M.ED"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MS.MUSKAN THAKUR",
                            Qualified = "NA",
                            Subjects = "ENGLISH + SPOKEN ENG"
                        },
                        new
                        {
                            Id = 13,
                            Name = "MRS.R.K.SAH",
                            Qualified = "NA",
                            Subjects = "MUSIC"
                        },
                        new
                        {
                            Id = 14,
                            Name = "MRS.SNEHA",
                            Qualified = "NA",
                            Subjects = "EVS + ACTIVITY"
                        },
                        new
                        {
                            Id = 15,
                            Name = "MRS.RUCHI KUMARI",
                            Qualified = "NA",
                            Subjects = "HINDI + M.ED"
                        },
                        new
                        {
                            Id = 16,
                            Name = "MR.Dummy ENGLISH Teacher4",
                            Qualified = "NA",
                            Subjects = "ENGLISH + SPOKEN ENG"
                        },
                        new
                        {
                            Id = 17,
                            Name = "MRS.KATYAYINI",
                            Qualified = "NA",
                            Subjects = "MATHEMATICS"
                        },
                        new
                        {
                            Id = 18,
                            Name = "MR.AMAN KUMAR",
                            Qualified = "NA",
                            Subjects = "S.SC. + ACTIVITY"
                        },
                        new
                        {
                            Id = 19,
                            Name = "MRS.PRAKRITI MOHANTI",
                            Qualified = "NA",
                            Subjects = "HINDI + M.ED"
                        },
                        new
                        {
                            Id = 20,
                            Name = "MR.Dummy ENGLISH Teacher1",
                            Qualified = "NA",
                            Subjects = "ENGLISH + SPOKEN ENG"
                        },
                        new
                        {
                            Id = 21,
                            Name = "MR.RAJESH KUMAR",
                            Qualified = "NA",
                            Subjects = "MATHEMATICS"
                        },
                        new
                        {
                            Id = 22,
                            Name = "MR.ABHIJEET KUMAR THAKUR",
                            Qualified = "NA",
                            Subjects = "EVS + ACTIVITY"
                        },
                        new
                        {
                            Id = 23,
                            Name = "MS.KANCHAN BHARTI",
                            Qualified = "NA",
                            Subjects = "ENGLISH + SPOKEN ENG"
                        },
                        new
                        {
                            Id = 24,
                            Name = "MR.NADIM QUASMI",
                            Qualified = "NA",
                            Subjects = "LIBRARY"
                        },
                        new
                        {
                            Id = 25,
                            Name = "MR.SURESH KUMAR",
                            Qualified = "NA",
                            Subjects = "MATHEMATICS"
                        },
                        new
                        {
                            Id = 26,
                            Name = "MS.AMRITA KUMARI",
                            Qualified = "NA",
                            Subjects = "EVS + ACTIVITY"
                        },
                        new
                        {
                            Id = 27,
                            Name = "MR.AVINASH KUMAR",
                            Qualified = "NA",
                            Subjects = "S.SC. + ACT + G.K."
                        },
                        new
                        {
                            Id = 28,
                            Name = "MRS.MEGHA MITI",
                            Qualified = "NA",
                            Subjects = "COMPUTER"
                        },
                        new
                        {
                            Id = 30,
                            Name = "MR.PRASHANT KUMAR",
                            Qualified = "NA",
                            Subjects = "MATHEMATICS"
                        },
                        new
                        {
                            Id = 31,
                            Name = "MR.PRABIN RANJAN",
                            Qualified = "NA",
                            Subjects = "EVS + ACTIVITY"
                        },
                        new
                        {
                            Id = 32,
                            Name = "MR.NIKHIL NISHANT",
                            Qualified = "NA",
                            Subjects = "S.SC. + ACTIVITY"
                        },
                        new
                        {
                            Id = 33,
                            Name = "MRS.VIJETA KUMARI",
                            Qualified = "NA",
                            Subjects = "HINDI + M.ED"
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.TimeTableEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("PeriodId")
                        .HasColumnType("int");

                    b.Property<int>("SchoolClassId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("SchoolClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TimeTableEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = 1,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Day = 1,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 3,
                            Day = 1,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 8,
                            TeacherId = 8
                        },
                        new
                        {
                            Id = 4,
                            Day = 1,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 5,
                            Day = 1,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 6,
                            Day = 1,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 7,
                            Day = 2,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 8,
                            Day = 2,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 9,
                            Day = 2,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 7,
                            TeacherId = 9
                        },
                        new
                        {
                            Id = 10,
                            Day = 2,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 11,
                            Day = 2,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 12,
                            Day = 2,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 13,
                            Day = 3,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 14,
                            Day = 3,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 15,
                            Day = 3,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 7,
                            TeacherId = 9
                        },
                        new
                        {
                            Id = 16,
                            Day = 3,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 17,
                            Day = 3,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 18,
                            Day = 3,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 19,
                            Day = 4,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 20,
                            Day = 4,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 21,
                            Day = 4,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 10,
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 22,
                            Day = 4,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 23,
                            Day = 4,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 24,
                            Day = 4,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 25,
                            Day = 5,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 26,
                            Day = 5,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 27,
                            Day = 5,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 11,
                            TeacherId = 10
                        },
                        new
                        {
                            Id = 28,
                            Day = 5,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 29,
                            Day = 5,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 30,
                            Day = 5,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 31,
                            Day = 6,
                            PeriodId = 1,
                            SchoolClassId = 13,
                            SubjectId = 2,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 32,
                            Day = 6,
                            PeriodId = 2,
                            SchoolClassId = 13,
                            SubjectId = 5,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 33,
                            Day = 6,
                            PeriodId = 3,
                            SchoolClassId = 13,
                            SubjectId = 9,
                            TeacherId = 7
                        },
                        new
                        {
                            Id = 34,
                            Day = 6,
                            PeriodId = 4,
                            SchoolClassId = 13,
                            SubjectId = 4,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 35,
                            Day = 6,
                            PeriodId = 5,
                            SchoolClassId = 13,
                            SubjectId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 36,
                            Day = 6,
                            PeriodId = 6,
                            SchoolClassId = 13,
                            SubjectId = 6,
                            TeacherId = 4
                        });
                });

            modelBuilder.Entity("StudentManagement.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JWTUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentManagement.Models.RefreshToken", b =>
                {
                    b.HasOne("StudentManagement.Models.User", null)
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StudentManagement.Models.TimeTableEntry", b =>
                {
                    b.HasOne("StudentManagement.Models.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.SchoolClass", "SchoolClass")
                        .WithMany()
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentManagement.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Period");

                    b.Navigation("SchoolClass");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentManagement.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
